version: 2.1

orbs:
  node: circleci/node@5.1.0
  slack: circleci/slack@4.12.0

commands:
  install-deps:
    description: "Install dependencies"
    steps:
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "package-lock.json" }}
            - v1-deps-
      - run:
          name: Install Backend Dependencies
          command: npm install
      - restore_cache:
          keys:
            - v1-frontend-deps-{{ checksum "frontend/package-lock.json" }}
            - v1-frontend-deps-
      - run:
          name: Install Frontend Dependencies
          command: cd frontend && npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-deps-{{ checksum "package-lock.json" }}
      - save_cache:
          paths:
            - frontend/node_modules
          key: v1-frontend-deps-{{ checksum "frontend/package-lock.json" }}

jobs:
  test:
    docker:
      - image: cimg/node:18.16
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run Backend Tests
          command: |
            chmod +x node_modules/.bin/jest
            npm test
      - run:
          name: Run Frontend Tests
          command: |
            cd frontend
            npm install
            npm test -- --watchAll=false
      - store_test_results:
          path: test-results

  build-and-test:
    docker:
      - image: cimg/node:18.16
    steps:
      - checkout
      
      # Set npm permissions
      - run:
          name: Set NPM Permissions
          command: |
            sudo chown -R $USER:$GROUP ~/.npm
            sudo chown -R $USER:$GROUP .
      
      # Install dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      
      - run:
          name: Install Dependencies
          command: |
            npm install
            cd frontend && npm install && cd ..
      
      - save_cache:
          paths:
            - node_modules
            - frontend/node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      
      # Run tests with proper permissions
      - run:
          name: Run Tests
          command: |
            sudo npm install -g jest
            npm test
      
      # Build frontend
      - run:
          name: Build Frontend
          command: cd frontend && npm run build
      
      - store_artifacts:
          path: frontend/build
          destination: build

  deploy-staging:
    docker:
      - image: cimg/node:18.16
    steps:
      - checkout
      - install-deps
      - run:
          name: Build Frontend
          command: cd frontend && npm run build
      - run:
          name: Deploy to Staging
          command: |
            echo "Deploying to staging environment"
            # Add your staging deployment commands here
      - slack/notify:
          event: pass
          custom: |
            Staging deployment successful! ðŸŽ‰

  deploy-production:
    docker:
      - image: cimg/node:18.16
    steps:
      - checkout
      - install-deps
      - run:
          name: Build Frontend
          command: cd frontend && npm run build
      - run:
          name: Deploy to Production
          command: |
            echo "Deploying to production environment"
            # Add your production deployment commands here
      - slack/notify:
          event: pass
          custom: |
            Production deployment successful! ðŸš€

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test
      - build-and-test
      - deploy-staging:
          requires:
            - build-and-test
          filters:
            branches:
              only: develop
      - deploy-production:
          requires:
            - deploy-staging
          filters:
            branches:
              only: main
          type: approval 